{"version":3,"sources":["styles/colors.ts","assets/images/first.jpg","assets/images/second.jpg","assets/images/hongkong.jpg","assets/images/tree_video2.mp4","pages/Cover/styles.ts","pages/Cover/index.tsx","components/organisms/NavBar/index.tsx","pages/Home/index.tsx","pages/Profile/index.tsx","components/organisms/Todolist/yearly.tsx","components/organisms/Todolist/monthly.tsx","pages/Todolist/index.tsx","components/organisms/Layout/index.tsx","App/index.tsx","reportWebVitals.js","styles/theme.ts","styles/globalStyles.ts","index.tsx"],"names":["ColorType","WholeDiv","styled","div","CircleButton","button","ArrowDiv","Video","video","BackgroundImgs","type","src","TreeVideo","First","Second","Hongkong","CenterDiv","stage","css","Cover","history","useHistory","useState","state","setState","maxStage","length","handlePage","addValue","prev","loop","autoPlay","muted","kind","label","style","left","onClick","push","right","NavBar","display","Home","Main","TodolistYearly","TodolistMonthly","Todolist","Layout","path","component","exact","Profile","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultTheme","palette","Blue","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","theme","document","getElementById"],"mappings":"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","file":"static/js/main.ce239a62.chunk.js","sourcesContent":["export enum ColorType {\r\n  Blue = 'blue',\r\n}\r\n\r\nexport const palette = {\r\n  [ColorType.Blue]: '#1696e5',\r\n};\r\n","export default __webpack_public_path__ + \"static/media/first.4f340a58.jpg\";","export default __webpack_public_path__ + \"static/media/second.a71a228e.jpg\";","export default __webpack_public_path__ + \"static/media/hongkong.f0a52651.jpg\";","export default __webpack_public_path__ + \"static/media/tree_video2.b811da26.mp4\";","import styled from 'styled-components';\r\n\r\nexport const WholeDiv = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: lightgray;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\nexport const CircleButton = styled.button`\r\n  width: 10rem;\r\n  height: 10rem;\r\n  border-radius: 50%;\r\n  z-index: 9;\r\n  &:hover {\r\n    box-shadow: 0 0 20px lightgray;\r\n    transition: 0.35s;\r\n  }\r\n`;\r\nexport const ArrowDiv = styled.div`\r\n  position: absolute;\r\n  z-index: 9;\r\n  top: 50%;\r\n  .MuiSvgIcon-root {\r\n    font-size: 3rem;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    :hover {\r\n      color: #999;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Video = styled.video`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  min-width: 100%;\r\n  min-height: 100%;\r\n  width: auto;\r\n  height: auto;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport First from 'assets/images/first.jpg';\r\nimport Second from 'assets/images/second.jpg';\r\nimport Hongkong from 'assets/images/hongkong.jpg';\r\nimport TreeVideo from 'assets/images/tree_video2.mp4';\r\nimport { WholeDiv, CircleButton, ArrowDiv, Video } from './styles';\r\n\r\nconst BackgroundImgs = [\r\n  { type: 'video', src: TreeVideo },\r\n  { type: 'pic', src: First },\r\n  { type: 'pic', src: Second },\r\n  { type: 'pic', src: Hongkong },\r\n];\r\n\r\ntype Props = {\r\n  stage: number;\r\n};\r\n\r\nconst CenterDiv = styled.div<Props>`\r\n  background-color: #000;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-size: cover;\r\n  ${({ stage }) => css`\r\n    background-image: url(${BackgroundImgs[stage].src});\r\n  `}\r\n`;\r\n\r\nconst Cover: React.FC = () => {\r\n  const history = useHistory();\r\n  const [state, setState] = useState(0);\r\n\r\n  const maxStage = BackgroundImgs.length - 1;\r\n\r\n  const handlePage = (addValue: number) => {\r\n    setState((prev) => {\r\n      const newState =\r\n        (prev + addValue) % BackgroundImgs.length < 0\r\n          ? maxStage\r\n          : (prev + addValue) % BackgroundImgs.length;\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <WholeDiv>\r\n      {BackgroundImgs[state].type === 'video' && (\r\n        <Video loop autoPlay muted>\r\n          <source src={TreeVideo} type=\"video/mp4\" />\r\n          <track src=\"\" kind=\"captions\" label=\"captions\" />\r\n        </Video>\r\n      )}\r\n\r\n      <ArrowDiv style={{ left: 0 }}>\r\n        <ArrowLeftIcon onClick={() => handlePage(-1)} />\r\n      </ArrowDiv>\r\n\r\n      <CenterDiv stage={state}>\r\n        <CircleButton onClick={() => history.push('/home')}>\r\n          ENTRANCE\r\n        </CircleButton>\r\n      </CenterDiv>\r\n\r\n      <ArrowDiv style={{ right: 0 }}>\r\n        <ArrowRightIcon onClick={() => handlePage(1)} />\r\n      </ArrowDiv>\r\n    </WholeDiv>\r\n  );\r\n};\r\n\r\nexport default Cover;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst NavBar: React.FC = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <button type=\"button\" onClick={() => history.push('/')}>\r\n        커버\r\n      </button>\r\n      <button type=\"button\" onClick={() => history.push('/home')}>\r\n        홈\r\n      </button>\r\n      <button type=\"button\" onClick={() => history.push('/profile')}>\r\n        프로필\r\n      </button>\r\n      <button type=\"button\" onClick={() => history.push('/todolist')}>\r\n        투두(버킷)리스트\r\n      </button>\r\n      <button type=\"button\">다이어리</button>\r\n      <button type=\"button\">캘린더(기한있는약속표기,참잘했어요)</button>\r\n      <button type=\"button\">작업물(포폴)</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Home: React.FC = () => {\r\n  const history = useHistory();\r\n  return <div>여기는 메인페이지</div>;\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Main: React.FC = () => {\r\n  const history = useHistory();\r\n  return <div>여기는 프로필입니다.</div>;\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nconst TodolistYearly: React.FC = () => {\r\n  return <div>yearly</div>;\r\n};\r\n\r\nexport default TodolistYearly;\r\n","import React from 'react';\r\n\r\nconst TodolistMonthly: React.FC = () => {\r\n  return <div>monthly</div>;\r\n};\r\n\r\nexport default TodolistMonthly;\r\n","import React from 'react';\r\nimport Yearly from 'components/organisms/Todolist/yearly';\r\nimport Monthly from 'components/organisms/Todolist/monthly';\r\n\r\nconst Todolist: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Monthly />\r\n      <Yearly />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todolist;\r\n","import React from 'react';\r\nimport { useHistory, Route, Switch } from 'react-router-dom';\r\nimport NavBar from 'components/organisms/NavBar';\r\nimport Home from 'pages/Home';\r\nimport Profile from 'pages/Profile';\r\nimport Todolist from 'pages/Todolist';\r\n\r\nconst Layout: React.FC = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/home\" component={Home} />\r\n          <Route path=\"/profile\" exact component={Profile} />\r\n          <Route path=\"/todolist\" exact component={Todolist} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Cover from 'pages/Cover';\r\nimport Layout from 'components/organisms/Layout';\r\nimport Home from 'pages/Home';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Cover} />\r\n        <Layout>\r\n          <Route path=\"/home\" exact component={Home} />\r\n        </Layout>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { DefaultTheme } from 'styled-components';\r\nimport { palette } from './colors';\r\n\r\nexport interface Theme extends DefaultTheme {\r\n  palette: Record<string, string>;\r\n}\r\n\r\nconst defaultTheme: Theme = { palette };\r\n\r\nexport default defaultTheme;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n  html {\r\n    font-size: 20px;\r\n  }\r\n  html,\r\n  body {\r\n    color: #717578;\r\n    font-family: 'spoqa', sans-serif;\r\n    font-weight: 400;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    margin: 0;\r\n    font-size: 20px;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body,\r\n  body *,\r\n  input,\r\n  textarea,\r\n  ::selection,\r\n  button {\r\n  font-family: inherit;\r\n  letter-spacing: -0.12px;\r\n  }\r\n\r\n  button {\r\n    outline: 0;\r\n    border: 0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport './index.css';\r\nimport App from './App/index';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport defaultTheme from './styles/theme';\r\nimport GlobalStyle from './styles/globalStyles';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <ThemeProvider theme={defaultTheme}>\r\n        <GlobalStyle />\r\n        <App />\r\n      </ThemeProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}